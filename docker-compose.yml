version: '3.2'
services:
  front:
    container_name: front
    build: ./reused-modules-front
    volumes:
      - ./reused-modules-front/:/app/
      - /app/node_modules
    command: pnpm dev
    ports:
      - '3001:3000'

  api:
    container_name: api
    build: ./reused-modules-api
    volumes:
      - ./reused-modules-api/:/app/
    ports:
      - '8080:8080'
    env_file:
      - ./reused-modules-api/.env

  # graphql:
  #   container_name: graphql
  #   build: ./reused-modules-graphql
  #   volumes:
  #     - ./reused-modules-graphql/:/app/
  #   ports:
  #     - '8000:8000'

  cms:
    container_name: cms
    build: ./reused-modules-cms
    volumes:
      - ./reused-modules-cms/:/app/
      - /app/node_modules
    command: pnpm dev
    ports:
      - '3002:6000'

  db:
    container_name: db
    image: mysql:8
    volumes:
      - ./docker/db/dump:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: db
      MYSQL_ROOT_PASSWORD: password
    ports:
      - 33080:3306

  postgres:
    container_name: "postgres"
    image: "postgres:12.2-alpine"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: product
    volumes:
      - ./reused-modules-api/_scripts/postgres:/docker-entrypoint-initdb.d

  mongodb-primary:
    container_name: mongodb-primary
    image: 'docker.io/bitnami/mongodb:4.4-debian-10'
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
    ports:
      - "27017:27017"
